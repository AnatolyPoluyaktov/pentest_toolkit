version: '3.8'

services:
  db:
    restart: always
    image: "postgres:12.3-alpine"
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_PORT=${POSTGRES_PORT}
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    networks:
      - pentest_network
    ports:
      - "5432:5432"

  rabbitmq:
    image: rabbitmq:3.6.6
    ports:
      - "5672:5672"
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=mypass
    networks:
      - pentest_network
  celery:
    image: toolkit:latest
    build:
      context: .
    #entrypoint: #./celery-entrypoint.sh
    command: celery -A core worker -l info
    volumes:
      - .:/usr/src/app
      - github_repos:/usr/src/github
      - wordlist:/usr/src/wordlist
      - scan_results:/usr/src/scan_results
      - gf_patterns:/root/.gf
      - nuclei_templates:/root/nuclei-templates
      - tool_config:/root/.config
    environment:
      - DEBUG=1
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_HOST=${POSTGRES_HOST}
    depends_on:
      - db
    networks:
      - pentest_network

  celery-beat:
    image: toolkit:latest
    build:
      context: .
    #entrypoint: ./beat-entrypoint.sh
    command: celery -A core beat -l INFO --scheduler django_celery_beat.schedulers:DatabaseScheduler
    depends_on:
      - celery
    environment:
      - DEBUG=1
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_HOST=${POSTGRES_HOST}
    volumes:
      - .:/usr/src/app
      - github_repos:/usr/src/github
      - wordlist:/usr/src/wordlist
      - scan_results:/usr/src/scan_results
      - gf_patterns:/root/.gf
      - nuclei_templates:/root/nuclei-templates
      - tool_config:/root/.config
    networks:
      - pentest_network

  backend:
    image: toolkit:latest
    build:
      context: .
    #entrypoint: ./entrypoint.sh
    command: python3 manage.py runserver 0.0.0.0:8000
    env_file:
      - ./.env
    volumes:
      - .:/usr/src/app
      - github_repos:/usr/src/github
      - wordlist:/usr/src/wordlist
      - scan_results:/usr/src/scan_results
      - gf_patterns:/root/.gf
      - nuclei_templates:/root/nuclei-templates
      - tool_config:/root/.config
    ports:
      - "8000:8000"
    depends_on:
      - db
      #- celery
     # - celery-beat
    networks:
      - pentest_network

  tor:
    image: peterdavehello/tor-socks-proxy
    restart: always
    networks:
      - pentest_network
    depends_on:
      - backend

networks:
  pentest_network:
volumes:
  tool_config:
  postgres_data:
  gf_patterns:
  nuclei_templates:
  github_repos:
  wordlist:
  scan_results:
