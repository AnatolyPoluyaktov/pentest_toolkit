from django import forms
from django_ace import AceWidget

from core.scanEngine.models import *
from core.validators import validate_short_name


class ReportForm(forms.ModelForm):
    class Meta:
        model = VulnerabilityReportSetting
        fields = "__all__"

    company_name = forms.CharField(
        required=False,
        widget=forms.TextInput(
            attrs={
                "class": "form-control form-control-lg",
                "id": "company_name",
                "placeholder": "Company Name",
            }
        ),
    )

    company_address = forms.CharField(
        required=False,
        widget=forms.TextInput(
            attrs={
                "class": "form-control form-control-lg",
                "id": "company_address",
                "placeholder": "Company Address",
            }
        ),
    )

    company_website = forms.CharField(
        required=False,
        widget=forms.TextInput(
            attrs={
                "class": "form-control form-control-lg",
                "id": "company_website",
                "placeholder": "Company Website https://company.com",
            }
        ),
    )

    company_email = forms.CharField(
        required=False,
        widget=forms.TextInput(
            attrs={
                "class": "form-control form-control-lg",
                "id": "company_email",
                "placeholder": "email@yourcompany.com",
            }
        ),
    )

    show_footer = forms.BooleanField(
        required=False,
        widget=forms.CheckboxInput(
            attrs={
                "class": "form-check-input",
                "id": "show_footer",
            }
        ),
    )

    footer_text = forms.CharField(
        required=False,
        widget=forms.TextInput(
            attrs={
                "class": "form-control form-control-lg",
                "id": "footer_text",
                "aria-label": "switch",
                "placeholder": "Footer Text Â© Your Company",
            }
        ),
    )

    show_rengine_banner = forms.BooleanField(
        required=False,
        widget=forms.CheckboxInput(
            attrs={
                "class": "form-check-input",
                "id": "show_rengine_banner",
            }
        ),
    )

    show_executive_summary = forms.BooleanField(
        required=False,
        widget=forms.CheckboxInput(
            attrs={
                "class": "form-check-input",
                "id": "show_executive_summary",
            }
        ),
    )

    executive_summary_description = forms.CharField(
        required=False,
        widget=forms.Textarea(attrs={"id": "executive_summary_description"}),
    )

    primary_color = forms.CharField(
        required=False,
        widget=forms.TextInput(attrs={"id": "primary_color", "hidden": "true"}),
    )

    secondary_color = forms.CharField(
        required=False,
        widget=forms.TextInput(attrs={"id": "secondary_color", "hidden": "true"}),
    )

    def set_value(self, key):
        self.initial["company_name"] = key.company_name
        self.initial["company_address"] = key.company_address
        self.initial["company_website"] = key.company_website
        self.initial["company_email"] = key.company_email
        self.initial["show_rengine_banner"] = key.show_rengine_banner
        self.initial["show_executive_summary"] = key.show_executive_summary
        self.initial[
            "executive_summary_description"
        ] = key.executive_summary_description
        self.initial["show_footer"] = key.show_footer
        self.initial["footer_text"] = key.footer_text
        self.initial["primary_color"] = key.primary_color
        self.initial["secondary_color"] = key.secondary_color

    def set_initial(self):
        self.initial["show_rengine_banner"] = True
        self.initial["show_footer"] = False
        self.initial["show_executive_summary"] = False
        self.initial["primary_color"] = "#FFB74D"
        self.initial["secondary_color"] = "#212121"
        self.initial[
            "executive_summary_description"
        ] = """On **{scan_date}**, **{target_name}** engaged **{company_name}** to perform a security audit on their Web application.

**{company_name}** performed both Security Audit and Reconnaissance using automated tool reNgine. https://github.com/yogeshojha/rengine .

## Observations

During the course of this engagement **{company_name}** was able to discover **{subdomain_count}** Subdomains and  **{vulnerability_count}** Vulnerabilities, including informational vulnerabilities and these could pose a significant risk to the security of the application.

The breakdown of the Vulnerabilities Identified in **{target_name}** by severity are as follows:

* Critical : {critical_count}
* High : {high_count}
* Medium : {medium_count}
* Low : {low_count}
* Info : {info_count}
* Unknown : {unknown_count}

**{company_name}** recommends that these issues be addressed in timely manner.

"""
