from django import forms
from django_ace import AceWidget

from core.scanEngine.models import *
from core.validators import validate_short_name


class NotificationForm(forms.ModelForm):
    class Meta:
        model = Notification
        fields = "__all__"

    send_to_slack = forms.BooleanField(
        required=False,
        widget=forms.CheckboxInput(
            attrs={
                "class": "form-check-input",
                "id": "slack_checkbox",
            }
        ),
    )

    slack_hook_url = forms.CharField(
        required=False,
        widget=forms.TextInput(
            attrs={
                "class": "form-control",
                "id": "slack_hook_url",
                "placeholder": "https://hooks.slack.com/services/T00000000/B00000000/XXXXXXXXXXXXXXXXXXXXXXXX",
            }
        ),
    )

    send_to_discord = forms.BooleanField(
        required=False,
        widget=forms.CheckboxInput(
            attrs={
                "class": "form-check-input",
                "id": "discord_checkbox",
            }
        ),
    )

    discord_hook_url = forms.CharField(
        required=False,
        widget=forms.TextInput(
            attrs={
                "class": "form-control",
                "id": "discord_hook_url",
                "placeholder": "https://discord.com/api/webhooks/000000000000000000/XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
            }
        ),
    )

    send_to_telegram = forms.BooleanField(
        required=False,
        widget=forms.CheckboxInput(
            attrs={
                "class": "form-check-input",
                "id": "telegram_checkbox",
            }
        ),
    )

    telegram_bot_token = forms.CharField(
        required=False,
        widget=forms.TextInput(
            attrs={
                "class": "form-control",
                "id": "telegram_bot_token",
                "placeholder": "Bot Token",
            }
        ),
    )

    telegram_bot_chat_id = forms.CharField(
        required=False,
        widget=forms.TextInput(
            attrs={
                "class": "form-control",
                "id": "telegram_bot_chat_id",
                "placeholder": "Bot Chat ID",
            }
        ),
    )

    send_scan_status_notif = forms.BooleanField(
        required=False,
        widget=forms.CheckboxInput(
            attrs={
                "class": "form-check-input",
                "id": "send_scan_status_notif",
            }
        ),
    )

    send_interesting_notif = forms.BooleanField(
        required=False,
        widget=forms.CheckboxInput(
            attrs={
                "class": "form-check-input",
                "id": "send_interesting_notif",
            }
        ),
    )

    send_vuln_notif = forms.BooleanField(
        required=False,
        widget=forms.CheckboxInput(
            attrs={
                "class": "form-check-input",
                "id": "send_vuln_notif",
            }
        ),
    )

    send_subdomain_changes_notif = forms.BooleanField(
        required=False,
        widget=forms.CheckboxInput(
            attrs={
                "class": "form-check-input",
                "id": "send_subdomain_changes_notif",
            }
        ),
    )

    send_scan_output_file = forms.BooleanField(
        required=False,
        widget=forms.CheckboxInput(
            attrs={
                "class": "form-check-input",
                "id": "send_scan_output_file",
            }
        ),
    )

    def set_value(self, key):
        self.initial["send_to_slack"] = key.send_to_slack
        self.initial["send_to_discord"] = key.send_to_discord
        self.initial["send_to_telegram"] = key.send_to_telegram

        self.initial["slack_hook_url"] = key.slack_hook_url
        self.initial["discord_hook_url"] = key.discord_hook_url
        self.initial["telegram_bot_token"] = key.telegram_bot_token
        self.initial["telegram_bot_chat_id"] = key.telegram_bot_chat_id

        self.initial["send_scan_status_notif"] = key.send_scan_status_notif
        self.initial["send_interesting_notif"] = key.send_interesting_notif
        self.initial["send_vuln_notif"] = key.send_vuln_notif
        self.initial["send_subdomain_changes_notif"] = key.send_subdomain_changes_notif

        self.initial["send_scan_output_file"] = key.send_scan_output_file

        if not key.send_to_slack:
            self.fields["slack_hook_url"].widget.attrs["readonly"] = True
        if not key.send_to_discord:
            self.fields["discord_hook_url"].widget.attrs["readonly"] = True
        if not key.send_to_telegram:
            self.fields["telegram_bot_token"].widget.attrs["readonly"] = True
            self.fields["telegram_bot_chat_id"].widget.attrs["readonly"] = True

    def set_initial(self):
        self.initial["send_to_slack"] = False
        self.initial["send_to_discord"] = False
        self.initial["send_to_telegram"] = False

        self.fields["slack_hook_url"].widget.attrs["readonly"] = True
        self.fields["discord_hook_url"].widget.attrs["readonly"] = True
        self.fields["telegram_bot_token"].widget.attrs["readonly"] = True
        self.fields["telegram_bot_chat_id"].widget.attrs["readonly"] = True

        self.initial["send_scan_status_notif"] = True
        self.initial["send_interesting_notif"] = True
        self.initial["send_vuln_notif"] = True
        self.initial["send_subdomain_changes_notif"] = True

        self.initial["send_scan_output_file"] = True
