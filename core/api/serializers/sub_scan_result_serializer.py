from django.db.models import F, JSONField, Value
from rest_framework import serializers

from core.common_func import *
from core.dashboard.models import *
from core.recon_note.models import *
from core.scanEngine.models import *
from core.startScan.models import *
from core.targetApp.models import Domain, Project


class SubScanResultSerializer(serializers.ModelSerializer):

    task = serializers.SerializerMethodField("get_task_name")
    subdomain_name = serializers.SerializerMethodField("get_subdomain_name")
    engine = serializers.SerializerMethodField("get_engine_name")

    class Meta:
        model = SubScan
        fields = [
            "id",
            "subdomain_name",
            "start_scan_date",
            "stop_scan_date",
            "scan_history",
            "subdomain",
            "celery_id",
            "status",
            "subdomain_name",
            "task",
            "engine",
        ]

    def get_subdomain_name(self, subscan):
        return subscan.subdomain.name

    def get_task_name(self, subscan):
        if subscan.port_scan:
            return "port_scan"
        elif subscan.fetch_url:
            return "fetch_url"
        elif subscan.dir_file_fuzz:
            return "dir_file_fuzz"
        elif subscan.vulnerability_scan:
            return "vulnerability_scan"
        elif subscan.osint:
            return "osint"
        else:
            return "Unknown"

    def get_engine_name(self, subscan):
        if subscan.engine:
            return subscan.engine.engine_name
        return ""
