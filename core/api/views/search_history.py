import json
import logging
import re
import subprocess

import requests
import validators
from bs4 import BeautifulSoup
from django.core import serializers
from django.db.models import CharField, Count, Q, Value
from django.shortcuts import get_object_or_404
from django.utils import timezone
from lxml import html
from packaging import version
from rest_framework import generics, status, viewsets
from rest_framework.decorators import action, api_view
from rest_framework.response import Response
from rest_framework.views import APIView
from selenium import webdriver
from selenium.webdriver.common.by import By
# selenium
from selenium.webdriver.firefox.options import Options as FirefoxOptions
from selenium.webdriver.support import expected_conditions as EC
from selenium.webdriver.support.ui import WebDriverWait

from core.api.serializers.search_history_serializer import \
    SearchHistorySerializer
from core.celery import app
from core.common_func import *
from core.dashboard.models import *


class SearchHistoryView(APIView):
    def get(self, request):
        req = self.request

        response = {}
        response["status"] = False

        scan_history = SearchHistory.objects.all().order_by("-id")[:5]

        if scan_history:
            response["status"] = True
            response["results"] = SearchHistorySerializer(scan_history, many=True).data

        return Response(response)
