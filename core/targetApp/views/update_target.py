import csv
import io
import os
import threading
from datetime import timedelta
from functools import reduce
from operator import and_, or_

import requests
from django import http
from django.conf import settings
from django.contrib import messages
from django.db.models import Count, Q
from django.shortcuts import get_object_or_404, render
from django.urls import reverse
from django.utils import timezone
from django.utils.safestring import mark_safe

import validators
from core.common_func import *
from core.scanEngine.forms import *
from core.scanEngine.models import *
from core.startScan.models import *
from core.targetApp.forms import *
from core.targetApp.models import *
from core.targetApp.forms.add_target import AddTargetForm
from core.targetApp.forms.add_project import AddProjectForm
from core.targetApp.forms.update_target import UpdateTargetForm
from core.targetApp.forms.update_project import UpdateProjectForm


def update_target(request, id):
    domain = get_object_or_404(Domain, id=id)
    form = UpdateTargetForm()
    if request.method == "POST":
        form = UpdateTargetForm(request.POST, instance=domain)
        if form.is_valid():
            form.save()
            messages.add_message(
                request, messages.INFO, "Domain {} modified!".format(domain.name)
            )
            return http.HttpResponseRedirect(reverse("list_target"))
    else:
        form.set_value(domain.name, domain.description, domain.h1_team_handle)
    context = {
        "list_target_li": "active",
        "target_data_active": "active",
        "domain": domain,
        "form": form,
    }
    return render(request, "target/update.html", context)