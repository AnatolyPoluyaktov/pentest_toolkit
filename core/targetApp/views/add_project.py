import csv
import io
import os
import threading
from datetime import timedelta
from functools import reduce
from operator import and_, or_

import requests
from django import http
from django.conf import settings
from django.contrib import messages
from django.db.models import Count, Q
from django.shortcuts import get_object_or_404, render
from django.urls import reverse
from django.utils import timezone
from django.utils.safestring import mark_safe

import validators
from core.common_func import *
from core.scanEngine.forms import *
from core.scanEngine.models import *
from core.startScan.models import *
from core.targetApp.forms import *
from core.targetApp.models import *
from core.targetApp.forms.add_target import AddTargetForm
from core.targetApp.forms.add_project import AddProjectForm
from core.targetApp.forms.update_target import UpdateTargetForm
from core.targetApp.forms.update_project import UpdateProjectForm


def add_project(request):
    form = AddProjectForm(request.POST or None)
    if request.method == "POST":
        print(form.errors)
        if form.is_valid():
            Project = Project.objects.create(
                name=form.cleaned_data["name"],
                description=form.cleaned_data["description"],
                insert_date=timezone.now(),
            )
            for domain_id in request.POST.getlist("domains"):
                domain = Domain.objects.get(id=domain_id)
                Project.domains.add(domain)
            messages.add_message(
                request,
                messages.INFO,
                "Project " + form.cleaned_data["name"] + " added successfully",
            )
            return http.HttpResponseRedirect(reverse("list_Project"))
    context = {"Project_active": "active", "form": form}
    return render(request, "Project/add.html", context)